name: .NET Core

on:
  push:
    branches: [ master ]
    
jobs:
  Deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v14
      id: verify-changed-files
      with:
        files: |
            TulsuScheduleBotSettings.json

    - name: Deploy Gist
      if: contains(steps.verify-changed-files.outputs.changed_files, 'TulsuScheduleBotSettings.json')
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.GIST_TOKEN }}
        gist_id: ${{ secrets.GIST_ID }}
        file_path: Bot/TulsuScheduleBotSettings.json
        file_type: json
         
    - name: DotNet Restore
      run: dotnet restore
    
    - name: DotNet Build
      run: dotnet build --no-restore
      
    - name: DotNet Run Tests
      run: dotnet test --no-build --verbosity normal
      
    - name: DotNet Publish
      run: dotnet publish --os linux -c Release
      
    - name: Stop schedule Service
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: service schedule stop
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        passphrase: ${{ secrets.PASSPHRASE }}
        privateKey: ${{ secrets.REMOTE_SSH_KEY }}
      
    - name: Copy to Server via SCP
      uses: garygrossgarten/github-action-scp@release
      with:
        local: /home/runner/work/ScheduleBot/ScheduleBot/bin/Release/net7.0/linux-x64/publish/
        concurrency: 10
        remote: ${{ secrets.REMOTE_TARGET }}
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        passphrase: ${{ secrets.PASSPHRASE }}
        privateKey: ${{ secrets.REMOTE_SSH_KEY }}
      env:
        ASPNETCORE_ENVIRONMENT: Production

    - name: Start schedule Service
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: service schedule start
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        passphrase: ${{ secrets.PASSPHRASE }}
        privateKey: ${{ secrets.REMOTE_SSH_KEY }}
